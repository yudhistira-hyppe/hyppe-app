{"version":3,"sources":["../../src/data/domain.ts"],"sourcesContent":["export interface ViewError {\n  id: number;\n  percentage?: number;\n  notes?: string;\n  message?: string;\n  last_seen?: string;\n  description?: string;\n  count?: number;\n  code?: number;\n}\n\nexport interface ErrorsParams {\n  filters?: Array<any>;\n  array?: Array<any>;\n}\n\nexport interface ErrorsListResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<ViewError>;\n}\n\nexport interface ExportsListResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<string>;\n}\n\nexport interface FilterQueryParams {\n  filter_id: string;\n  limit?: number;\n  page?: number;\n  filters?: Array<string>;\n  timeframe?: Array<string>;\n}\n\nexport interface DimensionQueryParams {\n  dimension_id: string;\n  limit?: number;\n  page?: number;\n  filters?: Array<string>;\n  timeframe?: Array<string>;\n}\n\nexport interface FilterValue {\n  value: string;\n  total_count: number;\n}\n\nexport declare interface FilterGetResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<FilterValue>;\n}\n\nexport declare interface DimensionGetResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<FilterValue>;\n}\n\nexport interface Incident {\n  id: string;\n  threshold?: number;\n  status: string;\n  started_at: string;\n  severity?: string;\n  sample_size_unit?: string;\n  sample_size?: number;\n  resolved_at?: string;\n  notifications?: Array<any>;\n  notification_rules?: Array<any>;\n  measurement?: string;\n  measured_value_on_close?: number;\n  measured_value?: number;\n  incident_key?: string;\n  impact?: string;\n  error_description?: string;\n  description?: string;\n  breakdowns?: Array<any>;\n  affected_views_per_hour_on_open?: number;\n  affected_views_per_hour?: number;\n  affected_views?: number;\n}\n\nexport interface IncidentsQueryParams {\n  limit?: number;\n  page?: number;\n  order_by?: string;\n  order_direction?: string;\n  status?: string;\n}\n\nexport interface IncidentsRelatedQueryParams {\n  limit?: number;\n  page?: number;\n  order_by?: string;\n  order_direction?: string;\n}\n\nexport declare interface IncidentsListResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<Incident>;\n}\n\nexport declare interface IncidentsGetResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Incident;\n}\n\nexport type MetricsMeasurementValue =\n  | '95th'\n  | 'median'\n  | 'avg'\n  | 'count'\n  | 'sum';\n\nexport interface Metric {\n  value?: number;\n  type?: string;\n  name?: string;\n  metric?: string;\n  measurement?: MetricsMeasurementValue;\n}\n\nexport interface Insight {\n  total_watch_time?: number;\n  total_views?: number;\n  negative_impact_score?: number;\n  metric?: number;\n  filter_value?: string;\n  filter_column?: string;\n}\n\nexport interface MetricsOverallValue {\n  value?: number;\n  total_watch_time?: number;\n  total_views?: number;\n  global_value?: number;\n}\n\nexport interface MetricsBreakdownValue {\n  views?: number;\n  value?: number;\n  total_watch_time?: number;\n  negative_impact?: number;\n  field?: string;\n}\n\nexport interface MetricsComparisonValue {\n  watch_time?: number;\n  view_count?: number;\n  name?: string;\n  value?: number;\n  metric?: string;\n  items?: Array<Metric>;\n}\n\nexport interface MetricsBreakdownQueryParams {\n  group_by: string;\n  measurement?: MetricsMeasurementValue;\n  filters?: Array<string>;\n  limit?: number;\n  page?: number;\n  order_by?: 'negative_impact' | 'value' | 'views' | 'field';\n  order_direction?: 'asc' | 'desc';\n  timeframe?: Array<string>;\n}\n\nexport interface MetricsComparisonQueryParams {\n  value: string;\n  dimension?: string;\n  filters?: Array<string>;\n  timeframe?: Array<string>;\n}\n\nexport interface MetricsInsightsQueryParams {\n  measurement?: MetricsMeasurementValue;\n  order_direction?: string;\n  timeframe?: Array<string>;\n}\n\nexport interface MetricsOverallQueryParams {\n  timeframe?: Array<string>;\n  filters?: Array<string>;\n  measurement?: MetricsMeasurementValue;\n}\n\nexport interface MetricsTimeseriesQueryParams {\n  filters?: Array<string>;\n  timeframe?: Array<string>;\n  measurement?: MetricsMeasurementValue;\n  group_by?: string;\n}\n\nexport declare interface MetricsBreakdownResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<MetricsBreakdownValue>;\n}\n\nexport declare interface MetricsComparisonResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<MetricsComparisonValue>;\n}\n\nexport declare interface MetricsInsightsResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<Insight>;\n}\n\nexport declare interface MetricsOverallResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: MetricsOverallValue;\n}\n\nexport declare interface MetricsTimeseriesResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<Array<string>>;\n}\n\nexport interface VideoViewEvent {\n  viewer_time?: number;\n  playback_time?: number;\n  name?: string;\n  event_time?: number;\n}\n\nexport interface VideoView {\n  view_total_upscaling?: string;\n  preroll_ad_asset_hostname?: string;\n  player_source_domain?: string;\n  region?: string;\n  viewer_user_agent?: string;\n  preroll_requested?: boolean;\n  page_type?: string;\n  startup_score?: string;\n  view_seek_duration?: string;\n  country_name?: string;\n  player_source_height?: number;\n  longitude?: string;\n  buffering_count?: string;\n  video_duration?: string;\n  player_source_type?: string;\n  city?: string;\n  view_id?: string;\n  platform_description?: string;\n  video_startup_preroll_request_time?: string;\n  viewer_device_name?: string;\n  video_series?: string;\n  viewer_application_name?: string;\n  updated_at?: string;\n  view_total_content_playback_time?: string;\n  cdn?: string;\n  player_instance_id?: string;\n  video_language?: string;\n  player_source_width?: number;\n  player_error_message?: string;\n  player_mux_plugin_version?: string;\n  watched?: boolean;\n  playback_score?: string;\n  page_url?: string;\n  metro?: string;\n  view_max_request_latency?: string;\n  requests_for_first_preroll?: string;\n  view_total_downscaling?: string;\n  latitude?: string;\n  player_source_host_name?: string;\n  inserted_at?: string;\n  view_end?: string;\n  mux_embed_version?: string;\n  player_language?: string;\n  page_load_time?: number;\n  viewer_device_category?: string;\n  video_startup_preroll_load_time?: string;\n  player_version?: string;\n  watch_time?: number;\n  player_source_stream_type?: string;\n  preroll_ad_tag_hostname?: string;\n  viewer_device_manufacturer?: string;\n  rebuffering_score?: string;\n  experiment_name?: string;\n  viewer_os_version?: string;\n  player_preload?: boolean;\n  buffering_duration?: string;\n  player_view_count?: number;\n  player_software?: string;\n  player_load_time?: string;\n  platform_summary?: string;\n  video_encoding_variant?: string;\n  player_width?: number;\n  view_seek_count?: string;\n  viewer_experience_score?: string;\n  view_error_id?: number;\n  video_variant_name?: string;\n  preroll_played?: boolean;\n  viewer_application_engine?: string;\n  viewer_os_architecture?: string;\n  player_error_code?: string;\n  buffering_rate?: string;\n  events?: Array<VideoViewEvent>;\n  player_name?: string;\n  view_start?: string;\n  view_average_request_throughput?: string;\n  video_producer?: string;\n  error_type_id?: number;\n  mux_viewer_id?: string;\n  video_id?: string;\n  continent_code?: string;\n  session_id?: string;\n  exit_before_video_start?: boolean;\n  video_content_type?: string;\n  viewer_os_family?: string;\n  player_poster?: string;\n  view_average_request_latency?: string;\n  video_variant_id?: string;\n  player_source_duration?: number;\n  player_source_url?: string;\n  mux_api_version?: string;\n  video_title?: string;\n  id?: string;\n  short_time?: string;\n  rebuffer_percentage?: string;\n  time_to_first_frame?: string;\n  viewer_user_id?: string;\n  video_stream_type?: string;\n  player_startup_time?: number;\n  viewer_application_version?: string;\n  view_max_downscale_percentage?: string;\n  view_max_upscale_percentage?: string;\n  country_code?: string;\n  used_fullscreen?: boolean;\n  isp?: string;\n  property_id?: number;\n  player_autoplay?: boolean;\n  player_height?: number;\n  asn?: number;\n  quality_score?: string;\n  player_software_version?: string;\n}\n\nexport interface VideoViewsQueryParams {\n  limit?: number;\n  page?: number;\n  error_id?: number;\n  order_direction?: 'asc' | 'desc';\n  filters?: Array<string>;\n  timeframe?: Array<string>;\n  viewer_id?: string;\n}\n\nexport interface VideoViewsListResponse {\n  total_row_count: number;\n  timeframe: Array<number>;\n  data: Array<VideoView>;\n}\n\nexport interface RealTimeBreakdownQueryParams {\n  dimension: string;\n  timestamp?: number;\n  filters?: Array<string>;\n  order_by?:\n    | 'value'\n    | 'negative_impact'\n    | 'metric_value'\n    | 'concurrent_viewers';\n  order_direction?: 'asc' | 'desc';\n}\n\nexport interface RealTimeTimeseriesParams {\n  filters?: Array<string>;\n}\n\nexport interface RealTimeHistogramQueryParams {\n  filters?: Array<string>;\n}\n\nexport interface RealTimeBreakdownValue {\n  value: string;\n  negative_impact: number;\n  metric_value: number;\n  concurrent_viewers: number;\n}\n\nexport interface RealTimeDimensionsValue {\n  name: string;\n  display_name: string;\n}\n\nexport interface RealTimeHistogramValue {\n  timestamp: string;\n  sum: number;\n  p95: number;\n  median: number;\n  max_percentage: number;\n  average: number;\n  bucket_values: Array<{\n    percentage: number;\n    count: number;\n  }>;\n}\n\nexport interface RealTimeBreakdownResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<RealTimeBreakdownValue>;\n}\n\nexport interface RealTimeDimensionsResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<RealTimeDimensionsValue>;\n}\n\nexport interface RealTimeMetricsResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<{\n    name: string;\n    display_name: string;\n  }>;\n}\n\nexport interface RealTimeTimeseriesResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<{\n    value: number;\n    date: string;\n    concurrent_viewers: number;\n  }>;\n}\n\nexport interface RealTimeHistogramResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  meta: {\n    buckets: Array<{ start: number; end: number }>;\n    bucket_unit: string;\n  };\n  data: Array<RealTimeHistogramValue>;\n}\n\nexport interface MonitoringBreakdownQueryParams {\n  dimension: string;\n  timestamp?: number;\n  filters?: Array<string>;\n  order_by?:\n    | 'value'\n    | 'negative_impact'\n    | 'metric_value'\n    | 'concurrent_viewers';\n  order_direction?: 'asc' | 'desc';\n}\n\nexport interface MonitoringTimeseriesParams {\n  filters?: Array<string>;\n}\n\nexport interface MonitoringHistogramQueryParams {\n  filters?: Array<string>;\n}\n\nexport interface MonitoringBreakdownValue {\n  value: string;\n  negative_impact: number;\n  metric_value: number;\n  concurrent_viewers: number;\n}\n\nexport interface MonitoringDimensionsValue {\n  name: string;\n  display_name: string;\n}\n\nexport interface MonitoringHistogramValue {\n  timestamp: string;\n  sum: number;\n  p95: number;\n  median: number;\n  max_percentage: number;\n  average: number;\n  bucket_values: Array<{\n    percentage: number;\n    count: number;\n  }>;\n}\n\nexport interface MonitoringBreakdownResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<MonitoringBreakdownValue>;\n}\n\nexport interface MonitoringDimensionsResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<MonitoringDimensionsValue>;\n}\n\nexport interface MonitoringMetricsResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<{\n    name: string;\n    display_name: string;\n  }>;\n}\n\nexport interface MonitoringTimeseriesResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  data: Array<{\n    value: number;\n    date: string;\n    concurrent_viewers: number;\n  }>;\n}\n\nexport interface MonitoringHistogramResponse {\n  total_row_count: null;\n  timeframe: Array<number>;\n  meta: {\n    buckets: Array<{ start: number; end: number }>;\n    bucket_unit: string;\n  };\n  data: Array<MonitoringHistogramValue>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}